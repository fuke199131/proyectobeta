{"ast":null,"code":"var _jsxFileName = \"/workspaces/proyectobeta/frontend/src/components/Recetas.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Recetas = () => {\n  _s();\n  const [preferencias, setPreferencias] = useState({\n    vegano: false,\n    picante: false,\n    sinPescado: false,\n    sinVerdura: false,\n    sinLegumbres: false,\n    sinCarne: false\n  });\n  const [recetas, setRecetas] = useState([]);\n  const [error, setError] = useState(null);\n  const handleChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setPreferencias({\n      ...preferencias,\n      [name]: checked\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/generate-recipes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          gustos: Object.entries(preferencias).filter(([_, valor]) => valor).map(([clave]) => clave)\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Error en la solicitud\");\n      }\n      const data = await response.json();\n      setRecetas(data);\n    } catch (err) {\n      setError(\"No se pudieron cargar las recetas.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generar Recetas Personalizadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [Object.keys(preferencias).map(pref => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: pref,\n          onChange: handleChange,\n          className: \"form-check-input\",\n          id: pref\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: pref,\n          children: pref.replace(\"sin\", \"No me gusta \").replace(/([A-Z])/g, \" $1\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, pref, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3\",\n        children: \"Generar Recetas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger mt-3\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Recetas Sugeridas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: recetas.map((receta, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: receta.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 46\n          }, this), receta.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: receta.image,\n            alt: receta.title,\n            style: {\n              maxWidth: \"200px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 32\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Recetas, \"31Pw6FrrO0mE6u2ZH9qyir47xrc=\");\n_c = Recetas;\nvar _c;\n$RefreshReg$(_c, \"Recetas\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Recetas","_s","preferencias","setPreferencias","vegano","picante","sinPescado","sinVerdura","sinLegumbres","sinCarne","recetas","setRecetas","error","setError","handleChange","e","name","checked","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","gustos","Object","entries","filter","_","valor","map","clave","ok","Error","data","json","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","keys","pref","type","onChange","id","htmlFor","replace","receta","index","title","image","src","alt","style","maxWidth","_c","$RefreshReg$"],"sources":["/workspaces/proyectobeta/frontend/src/components/Recetas.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport const Recetas = () => {\n  const [preferencias, setPreferencias] = useState({\n    vegano: false,\n    picante: false,\n    sinPescado: false,\n    sinVerdura: false,\n    sinLegumbres: false,\n    sinCarne: false,\n  });\n  const [recetas, setRecetas] = useState([]);\n  const [error, setError] = useState(null);\n\n  const handleChange = (e) => {\n    const { name, checked } = e.target;\n    setPreferencias({ ...preferencias, [name]: checked });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(null);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/generate-recipes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          gustos: Object.entries(preferencias)\n            .filter(([_, valor]) => valor)\n            .map(([clave]) => clave)\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Error en la solicitud\");\n      }\n\n      const data = await response.json();\n      setRecetas(data);\n    } catch (err) {\n      setError(\"No se pudieron cargar las recetas.\");\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <h2>Generar Recetas Personalizadas</h2>\n      <form onSubmit={handleSubmit}>\n        {Object.keys(preferencias).map((pref) => (\n          <div className=\"form-check\" key={pref}>\n            <input\n              type=\"checkbox\"\n              name={pref}\n              onChange={handleChange}\n              className=\"form-check-input\"\n              id={pref}\n            />\n            <label className=\"form-check-label\" htmlFor={pref}>\n              {pref.replace(\"sin\", \"No me gusta \").replace(/([A-Z])/g, \" $1\")}\n            </label>\n          </div>\n        ))}\n        <button type=\"submit\" className=\"btn btn-primary mt-3\">Generar Recetas</button>\n      </form>\n\n      {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\n\n      <div className=\"mt-4\">\n        <h4>Recetas Sugeridas:</h4>\n        <ul className=\"list-group\">\n          {recetas.map((receta, index) => (\n            <li key={index} className=\"list-group-item\">\n              <strong>{receta.title}</strong><br />\n              {receta.image && <img src={receta.image} alt={receta.title} style={{maxWidth:\"200px\"}} />}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}